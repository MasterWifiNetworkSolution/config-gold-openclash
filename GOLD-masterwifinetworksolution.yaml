---
proxy-groups:
- name: GAMEMASTER
  type: select
  disable-udp: false
  use:
  - MASTERGAME
- name: SOSMEDMASTER
  type: select
  disable-udp: false
  use:
  - MASTERSOSMED
- name: STREAMMASTER
  type: select
  disable-udp: false
  use:
  - MASTERSTREAM
- name: BROWSERMASTER
  type: select
  disable-udp: false
  use:
  - MASTERBROWSER
proxy-providers:
  MASTERGAME:
    type: file
    path: "./proxy_provider/gold-master.yaml"
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 99
  MASTERSOSMED:
    type: file
    path: "./proxy_provider/gold-master2.yaml"
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 99
  MASTERSTREAM:
    type: file
    path: "./proxy_provider/gold-master3.yaml"
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 99
  MASTERBROWSER:
    type: file
    path: "./proxy_provider/gold-master4.yaml"
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 99
dns:
  nameserver:
  - 192.168.7.1
  - dhcp://"eth1"
  enable: true
  ipv6: false
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  listen: 127.0.0.1:7874
  default-nameserver:
  - 192.168.7.1
redir-port: 7892
tproxy-port: 7895
port: 7890
socks-port: 7891
mixed-port: 7893
mode: rule
log-level: info
allow-lan: true
external-controller: 0.0.0.0:9090
secret: reyre
bind-address: "*"
external-ui: "/usr/share/openclash/dashboard"
ipv6: false
tun:
  enable: true
  stack: system
  dns-hijack:
  - tcp://8.8.8.8:53
  - tcp://8.8.4.4:53
profile:
  store-selected: true
rule-providers:
  IklanMaster:
    type: file
    behavior: classical
    path: "./rule_provider/iklanmaster.yaml"
    
  BrowserMaster:
    type: file
    behavior: classical
    path: "./rule_provider/browsermaster.yaml"
    
  StreamMaster:
    type: file
    behavior: classical
    path: "./rule_provider/streammaster.yaml"
    
  SosmedMaster:
    type: file
    behavior: classical
    path: "./rule_provider/sosmedmaster.yaml"
    
  GameMaster:
    type: file
    behavior: classical
    path: "./rule_provider/gamemaster.yaml"
    
  LAN:
    type: file
    behavior: classical
    path: "./rule_provider/LAN.yaml"
    
script:
  code: |
    def main(ctx, metadata):
        ruleset_action = {"IklanMaster": "REJECT",
            "BrowserMaster": "BROWSERMASTER",
            "StreamMaster": "STREAMMASTER",
            "SosmedMaster": "SOSMEDMASTER",
            "GameMaster": "GAMEMASTER",
            "LAN": "DIRECT"
          }

        port = int(metadata["dst_port"])

        if metadata["network"] == "UDP":
            if port == 443:
                ctx.log('[Script] matched QUIC traffic use direct')
                return "DIRECT"

        port_list = [21, 22, 23, 53, 80, 123, 143, 194, 443, 465, 587, 853, 993, 995, 998, 2052, 2053, 2082, 2083, 2086, 2095, 2096, 3478, 4244, 5222, 5223, 5228, 5229, 5230, 5242, 5288, 8080, 8443, 8880, 8888, 8889]
        if port not in port_list:
            ctx.log('[Script] not common port use direct')
            return "DIRECT"

        if metadata["dst_ip"] == "":
            metadata["dst_ip"] = ctx.resolve_ip(metadata["host"])

        for ruleset in ruleset_action:
            if ctx.rule_providers[ruleset].match(metadata):
                return ruleset_action[ruleset]

        if metadata["dst_ip"] == "":
            return "DIRECT"

        code = ctx.geoip(metadata["dst_ip"])
        if code == "CN":
            ctx.log('[Script] Geoip CN')
            return "DIRECT"

        ctx.log('[Script] FINAL')
        return "GLOBAL"
rules:
- IP-CIDR,198.18.0.1/16,REJECT,no-resolve
- RULE-SET,IklanMaster,REJECT
- RULE-SET,BrowserMaster,BROWSERMASTER
- RULE-SET,StreamMaster,STREAMMASTER
- RULE-SET,SosmedMaster,SOSMEDMASTER
- RULE-SET,GameMaster,GAMEMASTER
- RULE-SET,LAN,DIRECT
- GEOIP,CN,DIRECT
- MATCH,GLOBAL